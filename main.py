# Generated by Selenium IDE
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class Meeting():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_testMeeting(self):
        # Test name: testMeeting
        # Step # | name | target | value
        # 1 | open | /web/ |
        self.driver.get("http://meeting.xiaojukeji.com/web/")
        # 2 | setWindowSize | 1440x875 |
        self.driver.set_window_size(1560, 1024)

        time.sleep(2)
        self.driver.find_element(By.XPATH, '//input[@id="username"]').send_keys("userName")
        #
        self.driver.find_element(By.XPATH, '//input[@id="password"]').send_keys("Password")
        self.driver.find_element(By.ID, 'submit').click()
        time.sleep(2)
        # 4 | click | css=.ivu-cascader-rel .ivu-input |
        # self.driver.find_element(By.CSS_SELECTOR, ".ivu-cascader-rel .ivu-input").click()
        # # 5 | click | css=.ivu-cascader-menu-item-active:nth-child(1) |
        # self.driver.find_element(By.CSS_SELECTOR, ".ivu-cascader-menu-item-active:nth-child(1)").click()
        # 6 | click | css=.ivu-cascader-menu-item-active:nth-child(10) |ivu-input

        self.driver.find_element(By.XPATH, "/html/body/div[1]/div[3]/div[2]/div[1]/form/div[2]/div/div/div[1]/input").send_keys("白松露")
        self.driver.find_element(By.XPATH, "/html/body/div[1]/div[3]/div[2]/div[1]/form/div[2]/div/div/div[1]/input").send_keys(Keys.ENTER)

        time.sleep(2)
        # todo  这里最后一个li[]中的数字可以设置成变量 包含当天点开始之后的几天就是几 如果是当天就不需要这一行了
        self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div[2]/div[2]/div/div[1]/div[2]/div[1]/div/div[1]/div[2]/ul/li[5]/span/span').click()
        time.sleep(2)
        element = self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div[2]/div[2]/div/div[2]/div[3]/div/div[2]/div[31]')



        element2 = self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div[2]/div[2]/div/div[2]/div[3]/div/div[2]/div[34]')
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().move_to_element(element2).click().perform()

        time.sleep(3)
        self.driver.find_element(By.XPATH, '/html/body/div[9]/div[2]/div/div/div[1]/form/div[10]/div/div/button[2]').click()

        # 8 | mouseUp | css=.icon-add |
        # element = self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div[2]/div[2]/div/div[2]/div[3]/div/div[2]/div[45]')
        # actions = ActionChains(self.driver)
        # actions.drag_and_drop(element).release().perform()
        # element = self.driver.find_element(By.XPATH, '/html/body/div[1]/div[3]/div[2]/div[2]/div/div[2]/div[3]/div/div[5]/div[2]').click()
        # actions = ActionChains(self.driver)
        # actions.move_to_element(element).release().perform()
        # # 9 | click | css=.meeting-table |
        # self.driver.find_element(By.CSS_SELECTOR, ".meeting-table").click()
        # # 10 | click | css=.icon-add |
        # self.driver.find_element(By.CSS_SELECTOR, ".icon-add").click()
        # # 11 | click | css=.long:nth-child(5) .ivu-select-input |
        # self.driver.find_element(By.CSS_SELECTOR, ".long:nth-child(5) .ivu-select-input").click()
        # # 12 | click | css=.quesubmit > span |
        # self.driver.find_element(By.CSS_SELECTOR, ".quesubmit > span").click()
        # # 13 | editContent | id=text-elem8918004771960797 | <p><br></p>
        # element = self.driver.find_element(By.ID, "text-elem8918004771960797")
        # self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = '<p><br></p>'}", element)


def main():
    meeting = Meeting()
    meeting.setup_method("")
    meeting.test_testMeeting()
    meeting.teardown_method("")

if __name__=="__main__":
    main()
